#!/bin/bash
# chkconfig: 2345 90 10
# description: A secure socks5 proxy, designed to protect your Internet traffic.

### BEGIN INIT INFO
# Provides:          Shadowsocks-libev
# Required-Start:    $network $syslog
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Fast tunnel proxy that helps you bypass firewalls
# Description:       Start or stop the Shadowsocks-libev server
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
COLOR_RED='\E[1;31m'
COLOR_RED_DEEP='\033[0;31m'
COLOR_GREEN='\E[1;32m'
COLOR_GREEN_DEEP='\033[0;32m'
COLOR_YELLOW='\E[1;33m'
COLOR_BLUE='\E[1;34m'
COLOR_PINK='\E[1;35m'
COLOR_PINKBACK_WHITEFONT='\033[45;37m'
COLOR_GREEN_LIGHTNING='\033[32m \033[05m'
COLOR_END='\E[0m'

if [ -f /usr/local/bin/ss-server ]; then
    BIN=/usr/local/bin/ss-server
elif [ -f /usr/bin/ss-server ]; then
    BIN=/usr/bin/ss-server
fi
ProgramName="Shadowsocks-libev"
CONFIGFILE=/etc/shadowsocks-libev/config.json
LOGFILE=/root/shadowsocks-libev.log
PID_DIR=/var/run
PID_FILE=${PID_DIR}/shadowsocks-libev.pid
version="2.0"
RETVAL=0

[ -x ${BIN} ] || exit 0
if [ ! -f ${CONFIGFILE} ]; then
    echo "${ProgramName}config file ${CONFIGFILE} not found"
    exit 1
fi

if [ ! -d $PID_DIR ]; then
    mkdir -p $PID_DIR
    if [ $? -ne 0 ]; then
        echo "Creating PID directory $PID_DIR failed"
        exit 1
    fi    
fi

check_running() {
    if [ -r $PID_FILE ]; then
        read PID < $PID_FILE
        if [ -d "/proc/$PID" ]; then
            return 0
        else
            rm -f $PID_FILE
            return 1
        fi
    else
        PID=`ps -ef | grep -v grep | grep -i "${BIN}" | awk '{print $2}'`
	if [ ! -z $PID ]; then
	    return 0
        else
            return 1
        fi
    fi    
}

do_start(){
    check_running
    if [ $? -eq 0 ]; then
        echo "${ProgramName} (pid $PID) is already running."
        exit 0
    else
	echo -e -n "Starting ${ProgramName}:"
	if [[ "${log_flag}" =~ ^[Ll][Oo][Gg]$ ]]; then
            if [ -f "$LOGFILE" ]; then rm -rf $LOGFILE; fi
            $BIN -v -c $CONFIGFILE > $LOGFILE 2>&1 &
	    echo $! >  $PID_FILE
	else
	    $BIN -v -c $CONFIGFILE -f $PID_FILE
	fi
    fi
    RETVAL=$?
    if check_running; then
        echo -e "                                [${COLOR_GREEN_DEEP}  OK  ${COLOR_END}]"
    else
        echo -e "                                [${COLOR_RED_DEEP}FAILED${COLOR_END}]"
        RETVAL=1
    fi
}

do_stop(){
    echo -e -n "Stopping ${ProgramName}:"
    if check_running; then
        kill -9 $PID
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
            echo -e "                                [${COLOR_GREEN_DEEP}  OK  ${COLOR_END}]"
        else
	    echo -e "                                [${COLOR_RED_DEEP}FAILED${COLOR_END}]"
	    RETVAL=1
        fi
    else
        echo -e "                                [${COLOR_RED_DEEP}FAILED${COLOR_END}]"
        echo -e "${COLOR_RED}${ProgramName} not running.${COLOR_END}"
        RETVAL=1
    fi
    RETVAL=$?
    [ $RETVAL -eq 0 ]
    rm -f $PID_FILE
}

do_status() {
    check_running
    case $? in
        0)
        echo "${ProgramName} (pid $PID) is running..."
        ;;
        1)
        echo "${ProgramName} is stopped"
        RETVAL=1
        ;;
    esac
}

do_restart() {
    do_stop
    do_start
}

do_config() {
    vi ${CONFIGFILE}
}

do_viewconfig() {
    cat ${CONFIGFILE}
}

do_version(){
    echo -e "${ProgramName} version: ${COLOR_GREEN}$(${BIN} --help | grep -i "shadowsocks-libev" | awk '{print $2}')${COLOR_END}"
}

log_flag=$2
case "$1" in
    start|stop|restart|status|config|viewconfig)
    check_running
    do_$1
    ;;
    [vV][eE][rR][sS][iI][oO][nN]|-[vV][eE][rR][sS][iI][oO][nN]|--[vV][eE][rR][sS][iI][oO][nN]|-[vV]|--[vV])
        do_version
    ;;
    *)
    echo "Usage: $0 { start | stop | restart | status | config | viewconfig | version }"
    RETVAL=1
    ;;
esac

exit $RETVAL
